/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Ballot, BallotInterface } from "../../ballot.sol/Ballot";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "addCategory",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVotingCategories",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "voteCount",
            type: "uint256",
          },
        ],
        internalType: "struct Ballot.Category[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_voter",
        type: "address",
      },
    ],
    name: "giveRightToVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "moderator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_CategoryIndex",
        type: "uint256",
      },
    ],
    name: "vote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "voters",
    outputs: [
      {
        internalType: "uint256",
        name: "noOfVotes",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "hasVoted",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "vote",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "votingCategories",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "voteCount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningCategory",
    outputs: [
      {
        internalType: "uint256",
        name: "winningCategory_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "winningCategoryName",
    outputs: [
      {
        internalType: "string",
        name: "winningCategoryName_",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000181905550611316806100c86000396000f3fe60806040526004361061008a5760003560e01c80636fbb8640116100595780636fbb86401461013e5780639e7b8d611461017c578063a3ec138d146101a5578063d26e8313146101e4578063f167c2731461020f57610091565b80630121b93f146100965780632b6779b0146100bf5780632e0dcbf7146100ea578063387439041461011357610091565b3661009157005b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610a27565b61023a565b005b3480156100cb57600080fd5b506100d461038a565b6040516100e19190610aed565b60405180910390f35b3480156100f657600080fd5b50610111600480360381019061010c9190610c44565b610446565b005b34801561011f57600080fd5b506101286104b3565b6040516101359190610cce565b60405180910390f35b34801561014a57600080fd5b5061016560048036038101906101609190610a27565b6104d7565b604051610173929190610cf8565b60405180910390f35b34801561018857600080fd5b506101a3600480360381019061019e9190610d54565b610593565b005b3480156101b157600080fd5b506101cc60048036038101906101c79190610d54565b610780565b6040516101db93929190610d9c565b60405180910390f35b3480156101f057600080fd5b506101f96107b7565b6040516102069190610dd3565b60405180910390f35b34801561021b57600080fd5b5061022461083f565b6040516102319190610f46565b60405180910390f35b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020905060008160000154116102c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102bb90610fb4565b60405180910390fd5b8060010160009054906101000a900460ff1615610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d90611020565b60405180910390fd5b81816002018190555080600001546002838154811061033857610337611040565b5b90600052602060002090600202016001016000828254610358919061109e565b925050819055506000816000018190555060018160010160006101000a81548160ff0219169083151502179055505050565b606060026103966107b7565b815481106103a7576103a6611040565b5b906000526020600020906002020160000180546103c390611123565b80601f01602080910402602001604051908101604052809291908181526020018280546103ef90611123565b801561043c5780601f106104115761010080835404028352916020019161043c565b820191906000526020600020905b81548152906001019060200180831161041f57829003601f168201915b5050505050905090565b600260405180604001604052808381526020016000815250908060018154018082558091505060019003906000526020600020906002020160009091909190915060008201518160000190805190602001906104a392919061093a565b5060208201518160010155505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600281815481106104e757600080fd5b906000526020600020906002020160009150905080600001805461050a90611123565b80601f016020809104026020016040519081016040528092919081815260200182805461053690611123565b80156105835780601f1061055857610100808354040283529160200191610583565b820191906000526020600020905b81548152906001019060200180831161056657829003601f168201915b5050505050908060010154905082565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610621576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610618906111a0565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff16156106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a89061120c565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000015414610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d90611278565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555050565b60016020528060005260406000206000915090508060000154908060010160009054906101000a900460ff16908060020154905083565b6000806000905060005b60028054905081101561083a5781600282815481106107e3576107e2611040565b5b9060005260206000209060020201600101541115610827576002818154811061080f5761080e611040565b5b90600052602060002090600202016001015491508092505b808061083290611298565b9150506107c1565b505090565b60606002805480602002602001604051908101604052809291908181526020016000905b82821015610931578382906000526020600020906002020160405180604001604052908160008201805461089690611123565b80601f01602080910402602001604051908101604052809291908181526020018280546108c290611123565b801561090f5780601f106108e45761010080835404028352916020019161090f565b820191906000526020600020905b8154815290600101906020018083116108f257829003601f168201915b5050505050815260200160018201548152505081526020019060010190610863565b50505050905090565b82805461094690611123565b90600052602060002090601f01602090048101928261096857600085556109af565b82601f1061098157805160ff19168380011785556109af565b828001600101855582156109af579182015b828111156109ae578251825591602001919060010190610993565b5b5090506109bc91906109c0565b5090565b5b808211156109d95760008160009055506001016109c1565b5090565b6000604051905090565b600080fd5b600080fd5b6000819050919050565b610a04816109f1565b8114610a0f57600080fd5b50565b600081359050610a21816109fb565b92915050565b600060208284031215610a3d57610a3c6109e7565b5b6000610a4b84828501610a12565b91505092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610a8e578082015181840152602081019050610a73565b83811115610a9d576000848401525b50505050565b6000601f19601f8301169050919050565b6000610abf82610a54565b610ac98185610a5f565b9350610ad9818560208601610a70565b610ae281610aa3565b840191505092915050565b60006020820190508181036000830152610b078184610ab4565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610b5182610aa3565b810181811067ffffffffffffffff82111715610b7057610b6f610b19565b5b80604052505050565b6000610b836109dd565b9050610b8f8282610b48565b919050565b600067ffffffffffffffff821115610baf57610bae610b19565b5b610bb882610aa3565b9050602081019050919050565b82818337600083830152505050565b6000610be7610be284610b94565b610b79565b905082815260208101848484011115610c0357610c02610b14565b5b610c0e848285610bc5565b509392505050565b600082601f830112610c2b57610c2a610b0f565b5b8135610c3b848260208601610bd4565b91505092915050565b600060208284031215610c5a57610c596109e7565b5b600082013567ffffffffffffffff811115610c7857610c776109ec565b5b610c8484828501610c16565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610cb882610c8d565b9050919050565b610cc881610cad565b82525050565b6000602082019050610ce36000830184610cbf565b92915050565b610cf2816109f1565b82525050565b60006040820190508181036000830152610d128185610ab4565b9050610d216020830184610ce9565b9392505050565b610d3181610cad565b8114610d3c57600080fd5b50565b600081359050610d4e81610d28565b92915050565b600060208284031215610d6a57610d696109e7565b5b6000610d7884828501610d3f565b91505092915050565b60008115159050919050565b610d9681610d81565b82525050565b6000606082019050610db16000830186610ce9565b610dbe6020830185610d8d565b610dcb6040830184610ce9565b949350505050565b6000602082019050610de86000830184610ce9565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600082825260208201905092915050565b6000610e3682610a54565b610e408185610e1a565b9350610e50818560208601610a70565b610e5981610aa3565b840191505092915050565b610e6d816109f1565b82525050565b60006040830160008301518482036000860152610e908282610e2b565b9150506020830151610ea56020860182610e64565b508091505092915050565b6000610ebc8383610e73565b905092915050565b6000602082019050919050565b6000610edc82610dee565b610ee68185610df9565b935083602082028501610ef885610e0a565b8060005b85811015610f345784840389528151610f158582610eb0565b9450610f2083610ec4565b925060208a01995050600181019050610efc565b50829750879550505050505092915050565b60006020820190508181036000830152610f608184610ed1565b905092915050565b7f766f74657220686173206e6f20726967687420746f20766f7465000000000000600082015250565b6000610f9e601a83610a5f565b9150610fa982610f68565b602082019050919050565b60006020820190508181036000830152610fcd81610f91565b9050919050565b7f766f7465722068617320616c726561647920766f746564000000000000000000600082015250565b600061100a601783610a5f565b915061101582610fd4565b602082019050919050565b6000602082019050818103600083015261103981610ffd565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006110a9826109f1565b91506110b4836109f1565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156110e9576110e861106f565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061113b57607f821691505b60208210810361114e5761114d6110f4565b5b50919050565b7f4f6e6c79206d6f64657261746f72206861732061636365737300000000000000600082015250565b600061118a601983610a5f565b915061119582611154565b602082019050919050565b600060208201905081810360008301526111b98161117d565b9050919050565b7f54686520766f74657220616c726561647920766f746564000000000000000000600082015250565b60006111f6601783610a5f565b9150611201826111c0565b602082019050919050565b60006020820190508181036000830152611225816111e9565b9050919050565b7f566f7465722063616e277420766f746500000000000000000000000000000000600082015250565b6000611262601083610a5f565b915061126d8261122c565b602082019050919050565b6000602082019050818103600083015261129181611255565b9050919050565b60006112a3826109f1565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112d5576112d461106f565b5b60018201905091905056fea26469706673582212207ed0c4e7ee8af54c28b14c71b5fc03c7c9ae08da639a79581feb28fc8dc722a564736f6c634300080d0033";

type BallotConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BallotConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Ballot__factory extends ContractFactory {
  constructor(...args: BallotConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Ballot & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Ballot__factory {
    return super.connect(runner) as Ballot__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BallotInterface {
    return new Interface(_abi) as BallotInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Ballot {
    return new Contract(address, _abi, runner) as unknown as Ballot;
  }
}

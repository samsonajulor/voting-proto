/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { Multisig, MultisigInterface } from "../../mulitsig.sol/Multisig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
      {
        internalType: "uint8",
        name: "_requiredApprovals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ConfirmTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "ExecuteTransaction",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
    ],
    name: "RevokeApproval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "admin",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "txIndex",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SubmitTransaction",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "admins",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "approvals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredApprovals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "transactionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transactions",
    outputs: [
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "approvals",
        type: "uint8",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d4038038062000d40833981810160405281019062000037919062000554565b81518160ff16600a82111580156200004f5750818111155b80156200005d575060008114155b6200009f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040162000096906200061b565b60405180910390fd5b60005b84518110156200023b5760036000868381518110620000c657620000c56200063d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161580156200016e5750600073ffffffffffffffffffffffffffffffffffffffff168582815181106200014d576200014c6200063d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1614155b620001b0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001a790620006bc565b60405180910390fd5b600160036000878481518110620001cc57620001cb6200063d565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508080620002329062000717565b915050620000a2565b508360009080519060200190620002549291906200027a565b5082600160006101000a81548160ff021916908360ff1602179055505050505062000764565b828054828255906000526020600020908101928215620002f6579160200282015b82811115620002f55782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906200029b565b5b50905062000305919062000309565b5090565b5b80821115620003245760008160009055506001016200030a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200038c8262000341565b810181811067ffffffffffffffff82111715620003ae57620003ad62000352565b5b80604052505050565b6000620003c362000328565b9050620003d1828262000381565b919050565b600067ffffffffffffffff821115620003f457620003f362000352565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600062000437826200040a565b9050919050565b62000449816200042a565b81146200045557600080fd5b50565b60008151905062000469816200043e565b92915050565b6000620004866200048084620003d6565b620003b7565b90508083825260208201905060208402830185811115620004ac57620004ab62000405565b5b835b81811015620004d95780620004c4888262000458565b845260208401935050602081019050620004ae565b5050509392505050565b600082601f830112620004fb57620004fa6200033c565b5b81516200050d8482602086016200046f565b91505092915050565b600060ff82169050919050565b6200052e8162000516565b81146200053a57600080fd5b50565b6000815190506200054e8162000523565b92915050565b600080604083850312156200056e576200056d62000332565b5b600083015167ffffffffffffffff8111156200058f576200058e62000337565b5b6200059d85828601620004e3565b9250506020620005b0858286016200053d565b9150509250929050565b600082825260208201905092915050565b7f496e76616c696420726571756972656d656e7473000000000000000000000000600082015250565b600062000603601483620005ba565b91506200061082620005cb565b602082019050919050565b600060208201905081810360008301526200063681620005f4565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f496e76616c69642061646d696e00000000000000000000000000000000000000600082015250565b6000620006a4600d83620005ba565b9150620006b1826200066c565b602082019050919050565b60006020820190508181036000830152620006d78162000695565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600062000724826200070d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620007595762000758620006de565b5b600182019050919050565b6105cc80620007746000396000f3fe6080604052600436106100595760003560e01c806314bfd6d0146100b557806324d7806c146100f257806399c1aadc1461012f5780639ace38c21461015a578063ab2850da1461019a578063b77bf600146101d7576100b0565b366100b0573373ffffffffffffffffffffffffffffffffffffffff167f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1534476040516100a692919061032c565b60405180910390a2005b600080fd5b3480156100c157600080fd5b506100dc60048036038101906100d79190610386565b610202565b6040516100e991906103f4565b60405180910390f35b3480156100fe57600080fd5b506101196004803603810190610114919061043b565b610241565b6040516101269190610483565b60405180910390f35b34801561013b57600080fd5b50610144610261565b60405161015191906104ba565b60405180910390f35b34801561016657600080fd5b50610181600480360381019061017c9190610386565b610274565b60405161019194939291906104f6565b60405180910390f35b3480156101a657600080fd5b506101c160048036038101906101bc919061053b565b6102de565b6040516101ce9190610483565b60405180910390f35b3480156101e357600080fd5b506101ec61030d565b6040516101f9919061057b565b60405180910390f35b6000818154811061021257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b600160009054906101000a900460ff1681565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020160009054906101000a900460ff16908060020160019054906101000a900460ff16905084565b60056020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b60025481565b6000819050919050565b61032681610313565b82525050565b6000604082019050610341600083018561031d565b61034e602083018461031d565b9392505050565b600080fd5b61036381610313565b811461036e57600080fd5b50565b6000813590506103808161035a565b92915050565b60006020828403121561039c5761039b610355565b5b60006103aa84828501610371565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103de826103b3565b9050919050565b6103ee816103d3565b82525050565b600060208201905061040960008301846103e5565b92915050565b610418816103d3565b811461042357600080fd5b50565b6000813590506104358161040f565b92915050565b60006020828403121561045157610450610355565b5b600061045f84828501610426565b91505092915050565b60008115159050919050565b61047d81610468565b82525050565b60006020820190506104986000830184610474565b92915050565b600060ff82169050919050565b6104b48161049e565b82525050565b60006020820190506104cf60008301846104ab565b92915050565b60006104e0826103b3565b9050919050565b6104f0816104d5565b82525050565b600060808201905061050b60008301876104e7565b610518602083018661031d565b61052560408301856104ab565b6105326060830184610474565b95945050505050565b6000806040838503121561055257610551610355565b5b600061056085828601610371565b925050602061057185828601610426565b9150509250929050565b6000602082019050610590600083018461031d565b9291505056fea2646970667358221220941debcc297156849365b5b891b52bbf6b370ffc2b745f301c5c1856a05c10b864736f6c634300080d0033";

type MultisigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultisigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multisig__factory extends ContractFactory {
  constructor(...args: MultisigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _admins: AddressLike[],
    _requiredApprovals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _admins,
      _requiredApprovals,
      overrides || {}
    );
  }
  override deploy(
    _admins: AddressLike[],
    _requiredApprovals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _admins,
      _requiredApprovals,
      overrides || {}
    ) as Promise<
      Multisig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Multisig__factory {
    return super.connect(runner) as Multisig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultisigInterface {
    return new Interface(_abi) as MultisigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multisig {
    return new Contract(address, _abi, runner) as unknown as Multisig;
  }
}

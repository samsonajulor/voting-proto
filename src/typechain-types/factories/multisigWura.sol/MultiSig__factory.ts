/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { PayableOverrides } from "../../common";
import type {
  MultiSig,
  MultiSigInterface,
} from "../../multisigWura.sol/MultiSig";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_admins",
        type: "address[]",
      },
    ],
    stateMutability: "payable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "position",
        type: "uint256",
      },
    ],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
    ],
    name: "InvalidAdminNumber",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "duplicate",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "who",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Create",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "AprroveTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "calculateMinimumApproval",
    outputs: [
      {
        internalType: "uint256",
        name: "MinApp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_spender",
        type: "address",
      },
    ],
    name: "createTransaction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "getTransaction",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "spender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "numberOfApproval",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isActive",
            type: "bool",
          },
        ],
        internalType: "struct MultiSig.Transaction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x6080604052604051620012b4380380620012b4833981810160405281019062000029919062000534565b600381511015620000745760036040517f2a8876570000000000000000000000000000000000000000000000000000000081526004016200006b9190620005a0565b60405180910390fd5b60005b81518110156200027757600073ffffffffffffffffffffffffffffffffffffffff16828281518110620000af57620000ae620005bd565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036200012057600181620000e291906200061b565b6040517fe71c9b32000000000000000000000000000000000000000000000000000000008152600401620001179190620005a0565b60405180910390fd5b600260008383815181106200013a5762000139620005bd565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615620001ec57818181518110620001a657620001a5620005bd565b5b60200260200101516040517f07745c1d000000000000000000000000000000000000000000000000000000008152600401620001e3919062000689565b60405180910390fd5b600160026000848481518110620002085762000207620005bd565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555080806200026e90620006a6565b91505062000077565b5080600090805190602001906200029092919062000298565b5050620006f3565b82805482825590600052602060002090810192821562000314579160200282015b82811115620003135782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190620002b9565b5b50905062000323919062000327565b5090565b5b808211156200034257600081600090555060010162000328565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620003aa826200035f565b810181811067ffffffffffffffff82111715620003cc57620003cb62000370565b5b80604052505050565b6000620003e162000346565b9050620003ef82826200039f565b919050565b600067ffffffffffffffff82111562000412576200041162000370565b5b602082029050602081019050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004558262000428565b9050919050565b620004678162000448565b81146200047357600080fd5b50565b60008151905062000487816200045c565b92915050565b6000620004a46200049e84620003f4565b620003d5565b90508083825260208201905060208402830185811115620004ca57620004c962000423565b5b835b81811015620004f75780620004e2888262000476565b845260208401935050602081019050620004cc565b5050509392505050565b600082601f8301126200051957620005186200035a565b5b81516200052b8482602086016200048d565b91505092915050565b6000602082840312156200054d576200054c62000350565b5b600082015167ffffffffffffffff8111156200056e576200056d62000355565b5b6200057c8482850162000501565b91505092915050565b6000819050919050565b6200059a8162000585565b82525050565b6000602082019050620005b760008301846200058f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000620006288262000585565b9150620006358362000585565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156200066d576200066c620005ec565b5b828201905092915050565b620006838162000448565b82525050565b6000602082019050620006a0600083018462000678565b92915050565b6000620006b38262000585565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203620006e857620006e7620005ec565b5b600182019050919050565b610bb180620007036000396000f3fe6080604052600436106100435760003560e01c80630ce5124e1461004f57806333ea3dc8146100785780637cf4c543146100b5578063c8781155146100de5761004a565b3661004a57005b600080fd5b34801561005b57600080fd5b50610076600480360381019061007191906106bb565b610109565b005b34801561008457600080fd5b5061009f600480360381019061009a91906106bb565b61034c565b6040516100ac91906107a8565b60405180910390f35b3480156100c157600080fd5b506100dc60048036038101906100d791906107ef565b6103fe565b005b3480156100ea57600080fd5b506100f361056f565b604051610100919061083e565b60405180910390f35b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610195576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161018c906108b6565b60405180910390fd5b6004600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610233576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022a90610922565b60405180910390fd5b60016004600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555060006003600083815260200190815260200160002090508060030160009054906101000a900460ff16610304576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102fb9061098e565b60405180910390fd5b600181600201600082825461031991906109dd565b92505081905550600081600201549050600061033361056f565b90508082106103465761034584610599565b5b50505050565b610354610640565b600360008381526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820160009054906101000a900460ff1615151515815250509050919050565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661048a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610481906108b6565b60405180910390fd5b6001600081548092919061049d90610a33565b919050555060006003600060015481526020019081526020016000209050828160010181905550818160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060018160030160006101000a81548160ff0219169083151502179055507f923f1fa2c44c3aec741bc0bb74cfdb2d73d61ea532799cda54b2941d89ab9fc633838560405161055793929190610a8a565b60405180910390a161056a600154610109565b505050565b600080600080549050905060646046826105899190610ac1565b6105939190610b4a565b91505090565b60006003600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc82600101549081150290604051600060405180830381858888f1935050505015801561061e573d6000803e3d6000fd5b5060008160030160006101000a81548160ff0219169083151502179055505050565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081526020016000151581525090565b600080fd5b6000819050919050565b61069881610685565b81146106a357600080fd5b50565b6000813590506106b58161068f565b92915050565b6000602082840312156106d1576106d0610680565b5b60006106df848285016106a6565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610713826106e8565b9050919050565b61072381610708565b82525050565b61073281610685565b82525050565b60008115159050919050565b61074d81610738565b82525050565b608082016000820151610769600085018261071a565b50602082015161077c6020850182610729565b50604082015161078f6040850182610729565b5060608201516107a26060850182610744565b50505050565b60006080820190506107bd6000830184610753565b92915050565b6107cc81610708565b81146107d757600080fd5b50565b6000813590506107e9816107c3565b92915050565b6000806040838503121561080657610805610680565b5b6000610814858286016106a6565b9250506020610825858286016107da565b9150509250929050565b61083881610685565b82525050565b6000602082019050610853600083018461082f565b92915050565b600082825260208201905092915050565b7f4e6f7420612056616c69642041646d696e000000000000000000000000000000600082015250565b60006108a0601183610859565b91506108ab8261086a565b602082019050919050565b600060208201905081810360008301526108cf81610893565b9050919050565b7f416c726561647920417070726f76656421210000000000000000000000000000600082015250565b600061090c601283610859565b9150610917826108d6565b602082019050919050565b6000602082019050818103600083015261093b816108ff565b9050919050565b7f4e6f742061637469766500000000000000000000000000000000000000000000600082015250565b6000610978600a83610859565b915061098382610942565b602082019050919050565b600060208201905081810360008301526109a78161096b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109e882610685565b91506109f383610685565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610a2857610a276109ae565b5b828201905092915050565b6000610a3e82610685565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a7057610a6f6109ae565b5b600182019050919050565b610a8481610708565b82525050565b6000606082019050610a9f6000830186610a7b565b610aac6020830185610a7b565b610ab9604083018461082f565b949350505050565b6000610acc82610685565b9150610ad783610685565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610b1057610b0f6109ae565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b5582610685565b9150610b6083610685565b925082610b7057610b6f610b1b565b5b82820490509291505056fea264697066735822122099cbaf5225fd68c658ffb77e664bbf2fdf1920af7a8fc1139359667ff805477864736f6c634300080d0033";

type MultiSigConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiSigConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiSig__factory extends ContractFactory {
  constructor(...args: MultiSigConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _admins: AddressLike[],
    overrides?: PayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_admins, overrides || {});
  }
  override deploy(
    _admins: AddressLike[],
    overrides?: PayableOverrides & { from?: string }
  ) {
    return super.deploy(_admins, overrides || {}) as Promise<
      MultiSig & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MultiSig__factory {
    return super.connect(runner) as MultiSig__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiSigInterface {
    return new Interface(_abi) as MultiSigInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): MultiSig {
    return new Contract(address, _abi, runner) as unknown as MultiSig;
  }
}
